// <auto-generated />
using System;
using APIProject.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace APIProject.Domain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220508044134_CreateNewDatabase")]
    partial class CreateNewDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("minhtien2")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("APIProject.Domain.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("APIProject.Domain.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ImageUrl");

                    b.Property<int>("IsActive");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Password");

                    b.Property<string>("Phone")
                        .HasMaxLength(15);

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("APIProject.Domain.Models.Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Definition");

                    b.Property<double>("Eb");

                    b.Property<int>("IsActive");

                    b.Property<string>("Name");

                    b.Property<double>("Rb");

                    b.HasKey("ID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("APIProject.Domain.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("APIProject.Domain.Models.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CountIt");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("Subject");

                    b.Property<string>("cauhoi");

                    b.Property<string>("cautraloi");

                    b.HasKey("ID");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("APIProject.Domain.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("APIProject.Domain.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvaterUrl");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<int>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("Phone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("APIProject.Domain.Models.Category", b =>
                {
                    b.HasOne("APIProject.Domain.Models.User", "User")
                        .WithMany("categories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
